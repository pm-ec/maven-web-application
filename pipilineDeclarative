pipeline{
 
agent any

options {
  timestamps()
 buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '3', numToKeepStr: '5'))

}

triggers {
  pollSCM ('* * * * *')
  //cron ('* * * * *')
}


tools{
maven 'maven3.8.6'
}

stages{
 stage('checkoutcode'){
   steps{
slackNotification('STARTED')
git credentialsId: '266cb0dd-f560-456f-a5d6-b58684422b27', url: 'https://github.com/pm-ec/maven-web-application.git'
}
}
//This stage will get the sourcecode from git

 stage('build'){
  steps{
  sh "mvn clean package"
}
}
//This stage will make build
/*
stage('Executesonareport'){
  steps{
  sh "mvn clean sonar:sonar"
}
}
//This stage will be execute sonarcube report

stage('uploadartifacts'){
  steps{
  sh "mvn clean deploy"
}
}
//This stage will upload the artifacts into Nexus Repo

stage('deployappintoTomcat'){
steps{
sshagent(['f51146a5-5968-4732-8164-470beb056e20']) {
sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.126.251.30:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}

*/
}//stages closing

post {
  success {
    slackNotification(currentBuild.result)
  }
  failure {
    slackNotification(currentBuild.result)
  }
  unsuccessful {
    slackNotification(currentBuild.result)
  }
}


}//pipeline closing

def slackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,channel:"#walmart")
}

